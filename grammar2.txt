# 格式为A->B C D
# D是声明语句
# S是可执行语句
# /[a]代表该产生式的项目的展望符不能有a

# 初始

P'->P
P->D P
P->S P
P->nil

#####################

# 声明语句

D->T id ;
D->record id { P }
T->X [ number ] C
T->X
X->int
X->real
C->[ number ] C
C->nil

#####################

# 赋值语句

S->L = E ;
S->id = E ;
E->E + E /[*]
E->E * E
E->( E )
E->id
E->number
L->id [ number ]
L->L [ number ]

#####################

# 控制语句
# 设and的优先级高于or
# B表示布尔表达式

S->if B then S' else S' end
S'->S
S'->S' S
S->while B do S' end
B->H B'
B'->or H B'
B'->nil
H->I H'
H'->and I H'
H'->nil
I->not B
I->( B )
I->E < E
I->E <= E
I->E > E
I->E >= E
I->E == E
I->E != E
I->true
I->false

#####################

# 函数声明调用语句
D->proc id ( D ) { P }
S->call id ( Elist ) ;
S->call id ;
Elist->E , Elist
Elist->nil

#####################

# 终结符对应的Token
id:<ID,->
int:<INT,->
real:<REAL,->
record:<RECORD,->
number:<INT_NUMBER,->
;:<END,->
end:<ED,->
,:<COMMA,->
(:<LP,->
):<RP,->
[:<LB,->
]:<RB,->
{:<LC,->
}:<RC,->
+:<ADD,->
-:<SUB,->
*:<MULTPLY,->
=:<ASSIGN,->
true:<BOOL_CON,True>
false:<BOOL_CON,False>
if:<IF,->
else:<ELSE,->
then:<THEN,->
while:<WHILE,->
do:<DO,->
proc:<PROCEDURE,->
call:<CALL,->
>:<GT,->
>=:<GE,->
<:<LT,->
<=:<LE,->
==:<EQ,->
!=:<NE,->
or:<OR,->
and:<AND,->
not:<NOT,->

# 恐慌模式的错误恢复
ERROR D
ERROR S